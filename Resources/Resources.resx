<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Choice" xml:space="preserve">
    <value>Choice</value>
  </data>
  <data name="Disclaimer" xml:space="preserve">
    <value>This console interface is temporary to be able to test the application and will allow some things the final product won't allow.</value>
  </data>
  <data name="GameTitle" xml:space="preserve">
    <value>ChatGame</value>
  </data>
  <data name="Goodbye" xml:space="preserve">
    <value>Goodbye!</value>
  </data>
  <data name="InvalidCommand" xml:space="preserve">
    <value>This is not a valid command!</value>
  </data>
  <data name="InvalidEmoji" xml:space="preserve">
    <value>This is not a valid emoji!</value>
  </data>
  <data name="InvalidEnemy" xml:space="preserve">
    <value>This is not a valid enemy!</value>
  </data>
  <data name="InvalidStreamer" xml:space="preserve">
    <value>This is not a valid streamer!</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>This is not a valid username!</value>
  </data>
  <data name="NotImplementedYet" xml:space="preserve">
    <value>I'm sorry, but this feature has not been implemented yet. :(</value>
  </data>
  <data name="PressAnyKeyToExit" xml:space="preserve">
    <value>&lt;press any key to close this window&gt;</value>
  </data>
  <data name="ExistingStreamer" xml:space="preserve">
    <value>This user has already been registered as a streamer!</value>
  </data>
  <data name="ThanksForUsing" xml:space="preserve">
    <value>Thank you for trying out this very early version of</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>version</value>
  </data>
  <data name="VersionId" xml:space="preserve">
    <value>0.1.2</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome to</value>
  </data>
  <data name="AskWhoToLog" xml:space="preserve">
    <value>Whose chat do you want to log?</value>
  </data>
  <data name="InvalidViewer" xml:space="preserve">
    <value>This is not a valid viewer!</value>
  </data>
  <data name="ExistingViewer" xml:space="preserve">
    <value>This user has already been registered to be viewing this user!</value>
  </data>
  <data name="HelpCommands" xml:space="preserve">
    <value>Show a list of all available commands.</value>
  </data>
  <data name="HelpHelp" xml:space="preserve">
    <value>Get to learn more about commands.</value>
  </data>
  <data name="HelpLogchat" xml:space="preserve">
    <value>Open a separate console to keep an eye out on someone's chat.</value>
  </data>
  <data name="HelpMain" xml:space="preserve">
    <value>Type "help [command]" to learn more about a command.</value>
  </data>
  <data name="HelpQuit" xml:space="preserve">
    <value>Close this terminal. Won't close other windows you may have opened!</value>
  </data>
  <data name="MainMenuText" xml:space="preserve">
    <value>What would you like to do? (type "commands" for a list of commands)</value>
  </data>
  <data name="UnregisteredStreamer" xml:space="preserve">
    <value>This user is not a registered livestreamer.</value>
  </data>
  <data name="UnregisteredUser" xml:space="preserve">
    <value>This username is not linked to a registered user.</value>
  </data>
  <data name="NonAdminError" xml:space="preserve">
    <value>The issuer is not an admin</value>
  </data>
  <data name="Connected" xml:space="preserve">
    <value>Connection to Twitch has succeeded.</value>
  </data>
  <data name="FailedTcpClient" xml:space="preserve">
    <value>Failed to connect to Twitch. Do you have a working internet connection?</value>
  </data>
  <data name="TimerStarted" xml:space="preserve">
    <value>Timer has been started.</value>
  </data>
  <data name="AskRegisterStreamer" xml:space="preserve">
    <value>Do you want to register the following user as a new livestreamer?</value>
  </data>
  <data name="AskRegisterUser" xml:space="preserve">
    <value>Do you want to register the following person as a new user?</value>
  </data>
  <data name="ExistingUser" xml:space="preserve">
    <value>This person has already been registered as a user!</value>
  </data>
  <data name="InvalidResponse" xml:space="preserve">
    <value>That is not a valid response!</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="YesOrNo" xml:space="preserve">
    <value>(y/n)</value>
  </data>
  <data name="InvalidUser" xml:space="preserve">
    <value>This is not a valid user!</value>
  </data>
  <data name="UnkownEmoji" xml:space="preserve">
    <value>This is not a known emoji!</value>
  </data>
  <data name="UnregisteredViewer" xml:space="preserve">
    <value>This user is not registered as a viewer of any streamer.</value>
  </data>
  <data name="UnregisteredViewerOfStreamer" xml:space="preserve">
    <value>This user is not registered as a viewer of this streamer.</value>
  </data>
  <data name="HelpAdd" xml:space="preserve">
    <value>Adds an item of the specified type to the database.</value>
  </data>
  <data name="HelpAddTypes" xml:space="preserve">
    <value>Valid types:</value>
  </data>
  <data name="TimerStopped" xml:space="preserve">
    <value>Timer has been stopped.</value>
  </data>
  <data name="AskRegisterStreamerAlso" xml:space="preserve">
    <value>Do you want to register the following user as a new livestreamer?</value>
  </data>
</root>